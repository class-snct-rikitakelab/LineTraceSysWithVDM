--
-- THIS FILE IS AUTOMATICALLY GENERATED!!
--
-- Generated at 12-Jan-14 by the UML-VDM++ Link
--
class LightVal

instance variables
  private targLightVal : int;
  private lightValRange : LightValRange ;
  private lightValEncoder : LightValEncoder;
  private lightValListener : LightValListener;

  --inv targLightVal >=0 and targLightVal <= MAX_LIGHT_VAL;

  values
  public MAX_LIGHT_VAL : int = 1023;


operations
  public LightVal : LightValEncoder ==> LightVal
  LightVal(LVE) ==
  (
    lightValEncoder := LVE;
    lightValRange := new LightValRange(0,1023);
  );

  public getLightVal : () ==> int
  getLightVal() ==
    (
      dcl measuredLightVal : int;
      measuredLightVal :=lightValEncoder.getLightVal();
      if(lightValRange.isOutofRange(measuredLightVal) = false)
      then  return measuredLightVal
      else (
            lightValListener.noticeOutOfRange(true);
            return measuredLightVal;   
            )
   );

  public getTargLightVal : () ==> int
  getTargLightVal() ==
    return targLightVal;

  public setTargLightVal : int ==> ()
  setTargLightVal(parm) ==
    targLightVal := parm;

  public setLightValRange : LightValRange ==> ()
  setLightValRange(LVR) ==
    lightValRange := LVR;

  public setLightValListener : LightValListener ==> ()
  setLightValListener(LVL) ==
    lightValListener := LVL;

sync
mutex(getTargLightVal);
mutex(setTargLightVal);
end LightVal



