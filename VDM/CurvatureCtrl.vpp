--
-- THIS FILE IS AUTOMATICALLY GENERATED!!
--
-- Generated at 12-Jan-14 by the UML-VDM++ Link
--
class CurvatureCtrl

instance variables
  private curvature : Curvature;
  private ctrlMethod : PIDCurvatureCtrl;
  private wheelMotor : WheelMotor;
  --wheelMotorが共有オブジェト　同じ名前だかから？
  private ctrlState : CurvatureCtrlState := <C_CTRL_OFF>;

types 
public
CurvatureCtrlState = <C_CTRL_OFF> | <C_CTRL_ON>;

operations

 public CurvatureCtrl : CurvatureEncoder * WheelMotor * PIDCurvatureCtrl ==> CurvatureCtrl
  CurvatureCtrl(CE, WM, PCC) ==
    (
      curvature :=new Curvature(CE);
      wheelMotor := WM;
      ctrlMethod := PCC;
    );

  public run : () ==> ()
  run() ==
    self.doCtrl();

  private doCtrl : () ==> ()
  doCtrl() ==
   (
    def 
    targ = curvature.getTargCurvarture();
    currentCurvature = curvature.getCurvature();
    in 
    (
      def 
      pwm =  ctrlMethod.calcCurvatureCtrlVal(targ,currentCurvature,0.0);
      in
      (
        wheelMotor.rotate(pwm);
      )
    );
);


  startCtrl()
    ext wr ctrlState:CurvatureCtrlState
    pre ctrlState = <C_CTRL_OFF>
    post ctrlState~ = <C_CTRL_ON>;

  stopCtrl() 
    ext wr ctrlState:CurvatureCtrlState
    pre ctrlState = <C_CTRL_ON>
    post ctrlState~ = <C_CTRL_OFF>;

  public getCtrlParm : () ==> PIDCurvatureCtrlParm
  getCtrlParm() ==
    return ctrlMethod.getPIDCurvatureCtrlParm();

  public getTargCurvature : () ==> real
  getTargCurvature() ==
    return curvature.getTargCurvarture();

  public setTargCurvature : real ==> ()
  setTargCurvature(parm) ==
    is not yet specified;

  private changeMode : CurvatureCtrlState ==> ()
  changeMode(state) ==
    is not yet specified;

  public setCtrlParm : PIDCurvatureCtrlParm ==> ()
  setCtrlParm(parm) ==
    is not yet specified;

thread
doCtrl();


end CurvatureCtrl



