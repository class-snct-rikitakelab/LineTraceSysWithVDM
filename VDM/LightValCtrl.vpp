  --
-- THIS FILE IS AUTOMATICALLY GENERATED!!
--
-- Generated at 12-Jan-14 by the UML-VDM++ Link
--
class LightValCtrl is subclass of TimerTask

instance variables
  private lightVal : LightVal;
  public ctrlState : bool := false;
  private wheelMotor : WheelMotor; 
  private ControlMethod : PIDLightValCtrl;



operations
  
  public LightValCtrl : LightValEncoder * WheelMotor * PIDLightValCtrl ==> LightValCtrl
  LightValCtrl(LVE, WM, PLVC) ==
    (
    lightVal := new LightVal(LVE); 
    wheelMotor := WM;    ControlMethod := PLVC;
    );

  public run : () ==> ()
  run() ==
    self.doLightValCtrl();


  public startCtrl : () ==> ()
    startCtrl() ==  
    changeMode(true)
    ext wr ctrlState:bool
    post ctrlState = true;
   
   public stopCtrl :() ==> ()
   stopCtrl() ==(
   changeMode(false);
   wheelMotor.rotate(0);
   )
    ext wr ctrlState:bool
    post ctrlState = false;

  public getCtrlParm : () ==> PIDLVCParm
  getCtrlParm() ==
    return ControlMethod.getCtrlParm();

  private doLightValCtrl : () ==> ()
  doLightValCtrl() ==
 (
  if ctrlState=true 
    then 
      def 
      targ = lightVal.getTargLightVal();
      currentLightVal = lightVal.getLightVal();
      in 
      (
        def 
        pwm =  ControlMethod.calcLightValCtrlVal(targ,currentLightVal,0.0);
        in
        (
          wheelMotor.rotate(pwm);
        )
      )
      else skip;  
);


  public getTargLightVal : () ==>  int
  getTargLightVal() ==
    lightVal.getTargLightVal();
    
  public setTargLightVal : int ==> ()
  setTargLightVal(parm) ==
    lightVal.setTargLightVal(parm);

  public changeMode : bool ==> ()
  changeMode(state) ==
    ctrlState := state;

  public setLightValRange : LightValRange ==> ()
  setLightValRange(LVR) ==
    lightVal.setLightValRange(LVR);

  public setCtrlParm : PIDLVCParm ==> ()
  setCtrlParm(parm) ==
    ControlMethod.setCtrlParm(parm);

  public setLightValListener : LightValListener ==> ()
  setLightValListener(LVL) ==
    lightVal.setLightValListener(LVL);

sync
mutex(stopCtrl);

end LightValCtrl



