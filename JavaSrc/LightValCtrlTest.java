//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at 2014-03-10 by the VDM++ to JAVA Code Generator
// (v9.0.3 - Fri 13-Dec-2013 09:24:01 +0900)
//
// ***** VDMTOOLS START Name=HeaderComment KEEP=NO
// ***** VDMTOOLS END Name=HeaderComment

// This file was genereted from "C:\\Users\\HOMMA\\Google ?.

// ***** VDMTOOLS START Name=package KEEP=NO
// ***** VDMTOOLS END Name=package

// ***** VDMTOOLS START Name=imports KEEP=NO
import jp.vdmtools.VDM.UTIL;
import junit.framework.TestCase;
import jp.vdmtools.VDM.CGException;
// ***** VDMTOOLS END Name=imports



public class LightValCtrlTest extends TestCase {

// ***** VDMTOOLS START Name=lightValEncoder KEEP=NO
  private LightValEncoderStub lightValEncoder = null;
// ***** VDMTOOLS END Name=lightValEncoder

// ***** VDMTOOLS START Name=wheelMotor KEEP=NO
  private WheelMotorStub wheelMotor = null;
// ***** VDMTOOLS END Name=wheelMotor

// ***** VDMTOOLS START Name=ControlMethod KEEP=NO
  private PIDLightValCtrl ControlMethod = null;
// ***** VDMTOOLS END Name=ControlMethod


// ***** VDMTOOLS START Name=vdm_init_LightValCtrlTest KEEP=NO
  private void vdm_init_LightValCtrlTest () {}
// ***** VDMTOOLS END Name=vdm_init_LightValCtrlTest


// ***** VDMTOOLS START Name=LightValCtrlTest KEEP=NO
  public LightValCtrlTest () throws CGException {
    vdm_init_LightValCtrlTest();
  }
// ***** VDMTOOLS END Name=LightValCtrlTest


// ***** VDMTOOLS START Name=setUp KEEP=NO
  public void setUp () throws CGException {
    lightValEncoder = new LightValEncoderStub();
    wheelMotor = new WheelMotorStub();
    ControlMethod = new PIDLightValCtrl();
  }
// ***** VDMTOOLS END Name=setUp


// ***** VDMTOOLS START Name=RunTest KEEP=NO
  protected void RunTest () throws CGException {
    test01();
    test02();
    test03();
    test04();
  }
// ***** VDMTOOLS END Name=RunTest


// ***** VDMTOOLS START Name=test01 KEEP=NO
  public void test01 () throws CGException {
    LightValCtrl tc = new LightValCtrl(lightValEncoder, wheelMotor, ControlMethod);
    tc.startCtrl();
    assertTrue(Boolean.valueOf(UTIL.equals((tc.ctrlState), Boolean.TRUE)));
  }
// ***** VDMTOOLS END Name=test01


// ***** VDMTOOLS START Name=test02 KEEP=NO
  public void test02 () throws CGException {
    PIDLVCParm p = null;
    LightValCtrl tc = null;
    p = new PIDLVCParm(new Integer(1), new Integer(0), new Integer(0));
    ControlMethod.setCtrlParm(p);
    tc = new LightValCtrl(lightValEncoder, wheelMotor, ControlMethod);
    tc.startCtrl();
    tc.setTargLightVal(new Integer(500));
    tc.run();
    assertTrue(Boolean.valueOf(wheelMotor.getRotate().intValue() == 500));
  }
// ***** VDMTOOLS END Name=test02


// ***** VDMTOOLS START Name=test03 KEEP=NO
  public void test03 () throws CGException {
    LightValCtrl tc = new LightValCtrl(lightValEncoder, wheelMotor, ControlMethod);
    tc.startCtrl();
    assertTrue(Boolean.valueOf(UTIL.equals((tc.ctrlState), Boolean.TRUE)));
    tc.stopCtrl();
    assertTrue(Boolean.valueOf(UTIL.equals((tc.ctrlState), Boolean.FALSE)));
    assertTrue(Boolean.valueOf(wheelMotor.getRotate().intValue() == 0));
  }
// ***** VDMTOOLS END Name=test03


// ***** VDMTOOLS START Name=test04 KEEP=NO
  public void test04 () throws CGException {
    PIDLVCParm p = null;
    LightValCtrl tc = null;
    p = new PIDLVCParm(new Integer(1), new Integer(0), new Integer(0));
    ControlMethod.setCtrlParm(p);
    tc = new LightValCtrl(lightValEncoder, wheelMotor, ControlMethod);
    tc.startCtrl();
    tc.setTargLightVal(new Integer(500));
    tc.run();
    assertTrue(Boolean.valueOf(UTIL.equals((tc.ctrlState), Boolean.TRUE)));
    tc.setTargLightVal(new Integer(100));
    assertTrue(Boolean.valueOf(tc.getTargLightVal().intValue() == 100));
  }
// ***** VDMTOOLS END Name=test04


// ***** VDMTOOLS START Name=tearDown KEEP=NO
  public void tearDown () throws CGException {
    ;
  }
// ***** VDMTOOLS END Name=tearDown

}
;
